# Adapted from spdlog (https://github.com/gabime/spdlog)

sudo: required
language: cpp
dist: focal

# gcc 5
addons: &gcc5
    apt:
        sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test' 
        packages:
            - libhdf5-serial-dev
            - gfortran-5
            - g++-5

# gcc 6
addons: &gcc6
    apt:
        sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test' 
        packages:
            - libhdf5-serial-dev
            - gfortran-6
            - g++-6

# gcc 7
addons: &gcc7
    apt:
        sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test' 
        packages:
            - libhdf5-serial-dev
            - gfortran-7
            - g++-7

# gcc 8
addons: &gcc8
    apt:
        sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test' 
        packages:
            - libhdf5-serial-dev
            - gfortran-8
            - g++-8

# gcc 9
addons: &gcc9
    apt:
        sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test' 
        packages:
            - libhdf5-serial-dev
            - gfortran-9
            - g++-9

matrix:
    include:
        # Currently gcc5 and gcc6 do not work with travis and focal
        #        - name: "gcc5"
        #          os: linux
        #          env: GCC_VERSION=5
        #          addons: *gcc5
        #
        #        - name: "gcc6"
        #          os: linux
        #          env: GCC_VERSION=6
        #          addons: *gcc6

        - name: "gcc7"
          os: linux
          env: GCC_VERSION=7
          addons: *gcc7

        - name: "gcc8"
          os: linux
          env: GCC_VERSION=8
          addons: *gcc8

        - name: "gcc9"
          os: linux
          env: GCC_VERSION=9
          addons: *gcc9

        - name: "clang10"
          os: linux
          env: CLANG_VERSION=10
          compiler: clang

        - name: "macOS xcode10.2"
          os: osx
          osx_image: xcode10.2

cache: 
    directories:
        - $HOME/.ccache
        - $HOME/.local/bin
        - $HOME/.local/lib
        - $HOME/.local/include

before_install:
    ############################################################################
    # All the dependencies are installed in ${HOME}/deps/
    ############################################################################
    - DEPS_DIR="${HOME}/deps"
    - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

    - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}" FC="gfortran-${GCC_VERSION}"; fi
    # - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi
    
    ############################################################################
    # Install a recent CMake
    ############################################################################
    - |
      if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
        CMAKE_URL="https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz"
        mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
        export PATH=${DEPS_DIR}/cmake/bin:${PATH}
      else
        brew install cmake || brew upgrade cmake
      fi
    - cmake --version

    #############################################################################
    # Return to root directory of the project
    #############################################################################
    - cd -
    - pwd

install:
    - mkdir build && cd build && cmake .. -DENABLE_TESTING=ON
    - make -j8

script:
    - ./test/nuchic-testsuite
    - ./test/nuchic-fortran-testsuite
